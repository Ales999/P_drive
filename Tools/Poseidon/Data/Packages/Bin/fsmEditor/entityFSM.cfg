class Compile
{
  clearNewLines = 0;
//  indenting = -1;  //no indenting
    rewriteFile = 0; //append result to the file, NOT rewriteIt
  class Pass_1
  {
    print_1 = "class %(fsmname)\n{\n";
    indent_2 = 2;
    print_2 = "class States\n{\n";
    indent_state = 4;
    class State
    {
      print_1 = "class %(statename)\n{\n";
      indent_2 = 6;
      print_2 = "name = ""%(statename)"";\n";
      print_3 = "class Init\n";
      print_a = "{\n";
      indent_b = 8;
      print_b = "%(stateinit)\n";
      indent_c = 6;
      print_c = "};\n";
      print_4 = "class Links\n{\n";
      indent_links = 8;
      class Links
      {
          print_1 = "class %(linkname)\n{\n";
          indent_2 = 10;
          print_2 = "priority = %(priority);\n";
	  print_3 = "to=""%(to)"";\n";
	  print_4 = "class Condition\n";
          print_c1 = "{\n";
          indent_c2 = 12;
          print_c2 = "%(condition)\n";
          indent_c3 = 10;
          print_c3 = "};\n";
	  print_5 = "class Action\n";
          print_a1 = "{\n";
          indent_a2 = 12;
          print_a2 = "%(action)\n";
          indent_a3 = 10;
          print_a3 = "};\n";
          indent_6 = 8;
          print_6 = "};\n";
      }
      indent_5 = 6;
      print_5 = "};\n";
      indent_6 = 4;
      print_6 = "};\n";
    }
    indent_3 = 2;
    print_3 = "};\n";
    print_4 = "initState=""%(initStateName)"";\n";
    print_5 = "finalStates[] =\n{\n";
    indent_fin = 4;
    class FinalStates
    {
      print_1 = """%(finalStateName)"",\n";
    }
    indent_6 = 2;
    print_6 = "};\n";
    indent_7 = 0;
    print_7 = "};\n";
  }
}


class Decompile
{
  process = 1;   //0 for not processing Decompile info
  FSMLeft  = "/*";
  FSMRight = "*/";
  class FSMPrefix
  {
    default = "";
    fsmFunctionDeclaration = "\n";
    fsmFunctionPrefix = "\n";
    fsmFunctionSufix = "\n";
    setFinal = "\n";
    stateprecondition = "\n";
    condprecondition = "\n";
    globalprefix = "\n";
    link = "\n";
  };
  class FSMPrefix2
  {
    default = "";
    head = "*/";
    condition = "\n";
    condprecondition = "\n";
    action = "\n";
    fsmFunctionDeclaration = "\n";
    fsmFunctionPrefix = "\n";
    fsmFunctionSufix = "\n";
    setFinal = "\n";
    stateinit = "\n";
    stateprecondition = "\n";
    globalprefix = "\n";
  };
  class FSMSufix
  {
    default = "";
    compile = "\n";
    state = "\n";
    head = "\n/*\n";
    link = "\n";
    condition = "\n";
    condprecondition = "\n";
    action = "\n";
    fsmFunctionDeclaration = "\n";
    fsmFunctionPrefix = "\n";
    fsmFunctionSufix = "\n";
    setFinal = "\n";
    stateinit = "\n";
    stateprecondition = "\n";
    globalprefix = "\n";
  };
  class FSMSufix2
  {
    default = "";
    compile = "";
    state = "\n";
    head = "\n";
    link = "\n";
    fsmFunctionDeclaration = "\n";
    fsmFunctionPrefix = "\n";
    fsmFunctionSufix = "\n";
    setFinal = "\n";
    condprecondition = "\n";
    stateprecondition = "\n";
    globalprefix = "\n";
  };
};
